name: docker-build
author: Release Engineering <team-rel-eng@hashicorp.com>
description: Builds and stores Docker images.

inputs:

  # Required explicit inputs.
  version:
    description: Version of the product, e.g. "X.Y.Z[-pre][+edition]".
    required: true

  arch:
    description: Target image architecture.
    required: true

  tags:
    description: >
      Whitespace-separated fully-qualified image names.
      Each tag must be in the format: <registry>/[<namespace>/]<repository>:<tag>
    required: true

  # General purpose inputs.
  target:
    description: >
      Dockerfile target stage to build.
      You should set this explicitly if your Dockerfile contains more than one target.
      You should use the target name (i.e. FROM ... AS <target name>) not the index.
      Defaults to 0, meaning the first target defined (fine if only one target).
    default: "0"

  arm_version:
    description: Version of arm architecture to use (ignored unless arch == arm).
    default: 6

  # Optional inputs whose values are guessed if left blank.
  zip_artifact_name:
    description: >
      Name of zip file artifact to download. If left empty defaults to
      ${PKG_NAME}_${OS}_${ARCH}.zip.
    default: ""

  pkg_name:
    description: >
      Only used to determine default zip name.
      Defaults to <repo-name(minus -enterprise)>_<version>[+ent]
      if left blank.
    default: ""

  bin_name:
    description: >
      Name of the product binary inside the zip file. If empty (which is the default)
      then the name is guessed using repo name with any -enteprise suffix removed.
    default: ""

  # Escape hatch inputs (use sparingly if at all).
  workdir:
    description: Working directory in which to run 'docker build'.
    default: .

  dockerfile:
    description: Dockerfile path relative to workdir.
    default: Dockerfile

# action runner (golang:latest image)
runs:
  using: composite
  #env:
  #  DOCKER_BUILDKIT: 1
  #  BUILDKIT_PROGRESS: plain
  steps:
    - name: Digest Inputs - Calculate Variables for Later Steps
      shell: bash
      env:

        # Required.
        REPO_NAME: "${{github.event.repository.name}}"
        REVISION: "${{github.sha}}"
        VERSION: "${{inputs.version}}"
        ARCH: "${{inputs.arch}}"
        TARGET: "${{inputs.target}}"

        # Optional.
        ARM_VERSION: "${{inputs.arm_version}}"
        PKG_NAME: "${{inputs.pkg_name}}"
        WORKDIR: "${{inputs.workdir}}"
        ZIP_NAME: "${{inputs.zip_artifact_name}}"
        BIN_NAME: "${{inputs.bin_name}}"

        DOCKERFILE: "${{inputs.dockerfile}}"

      run: ${{ github.action_path }}/scripts/digest_inputs 

    - name: Download Product Zip Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{env.ZIP_NAME}}
        path: ${{env.ZIP_LOCATION}}

    - name: Extract Product Zip Artifact
      shell: bash
      run: ${{ github.action_path }}/scripts/extract_product_zip

    - name: Docker Build
      shell: bash
      run: ${{ github.action_path}}/scripts/docker_build

    - name: Upload Tarball
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.TARBALL_NAME}}
        path: ${{env.TARBALL_NAME}}
