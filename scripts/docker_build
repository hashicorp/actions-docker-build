#!/usr/bin/env bash

set -Eeuo pipefail

die() { echo "$1" 1>&2; exit 1; }

# Required env vars.
[ -n "$BIN_NAME" ] || die "Must set BIN_NAME"
[ -n "$VERSION"  ] || die "Must set VERSION"
[ -n "$REVISION"  ] || die "Must set REVISION"
[ -n "$DOCKERFILE"  ] || die "Must set DOCKERFILE"
[ -n "$TARGET"  ] || die "Must set TARGET"
[ -n "$TARBALL_NAME"  ] || die "Must set TARBALL_NAME"
[ -n "$DEV_TARBALL_NAME"  ] || die "Must set TARBALL_NAME"
[ -n "$PLATFORM"  ] || die "Must set PLATFORM"
[ -n "$AUTO_TAG"  ] || die "Must set AUTO_TAG"
[ -n "$TAGS"  ] || die "Must set TAGS"

WORKDIR="${WORKDIR:-.}"

export DEV_TAGS="${DEV_TAGS:-}"

# Convert all contiguous blocks of whitespace to single spaces using xargs.
# This is needed to get all tags on one line for the read -ra below.
PROD_TAGS="$(xargs <<< "$TAGS")"
DEV_TAGS="$(xargs <<< "$DEV_TAGS")"

read -ra DEV_TAGS_A <<< "$DEV_TAGS"
read -ra PROD_TAGS_A <<< "$PROD_TAGS"

ALL_TAGS=("${DEV_TAGS_A[@]}")
ALL_TAGS+=("$AUTO_TAG")
ALL_TAGS+=("${PROD_TAGS_A[@]}")
echo "ALL_TAGS:" "${ALL_TAGS[@]}"

for T in "${ALL_TAGS[@]}"; do
	TAG_FLAGS+=("--tag=$T")
done

BUILD_ARGS=("BIN_NAME=$BIN_NAME")
BUILD_ARGS+=("PRODUCT_VERSION=$VERSION")
BUILD_ARGS+=("PRODUCT_REVISION=$REVISION")

for B in "${BUILD_ARGS[@]}"; do
	BA_FLAGS+=("--build-arg=$B")
done

cd "$WORKDIR"

docker buildx create --use

echo "==> Building image with tags:"
for T in "${ALL_TAGS[@]}"; do
  echo "    - $T"
done

docker buildx build --load \
  --target "$TARGET" \
  --platform "$PLATFORM" \
  "${TAG_FLAGS[@]}" \
  "${BA_FLAGS[@]}" \
  -f "$DOCKERFILE" \
  .

echo "==> Saving prod tags in '$TARBALL_NAME'"

docker save --output "$TARBALL_NAME" "${PROD_TAGS_A[@]}" "$AUTO_TAG"
echo "==> Tarball created."
ls -lah "$TARBALL_NAME"

if [ -n "$DEV_TAGS" ]; then
	echo "==> Saving dev tags in '$TARBALL_NAME'"
	docker save --output "$DEV_TARBALL_NAME" "${DEV_TAGS_A[@]}" "$AUTO_TAG"
	echo "==> Dev Tarball created."
	ls -lah "$DEV_TARBALL_NAME"
else
	echo "==> No dev tags specified, skipping export."
fi
